print(change.mean)
amgendata[c(72, 561, 905, 994, 1091), ]
#detecting change in variance
change.var<- cpt.var(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.var, cpt.col="blue", ylab="Daily Closing Price of Tesla Stock", main="Change Point Detection for Change in Variance", xlab="Time", xaxt = "n")
axis(1, at = c(72,400,800,1000), labels=c("1/1/2020","1/1/2021","1/1/2023", "1/5/2024"))
print(change.var)
library(changepoint)
change.mean<- cpt.mean(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.mean, cpt.col="red", ylab="Daily Closing Price of amgen Stock", main="Change Point Detection for Change in Mean", xlab="Time", xaxt = "n")
axis(1, at = c(9,262,513,752), labels=c("1/4/2021","1/4/2022","1/4/2023", "12/15/2023"))
print(change.mean)
amgendata[c(72, 561, 905, 994, 1091), ]
#detecting change in variance
change.var<- cpt.var(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.var, cpt.col="blue", ylab="Daily Closing Price of Tesla Stock", main="Change Point Detection for Change in Variance", xlab="Time", xaxt = "n")
axis(1, at = c(100,400,700,1000), labels=c("1/1/2020","1/1/2021","1/1/2023", "1/5/2024"))
print(change.var)
library(changepoint)
change.mean<- cpt.mean(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.mean, cpt.col="red", ylab="Daily Closing Price of amgen Stock", main="Change Point Detection for Change in Mean", xlab="Time", xaxt = "n")
axis(1, at = c(9,262,513,752), labels=c("1/4/2021","1/4/2022","1/4/2023", "12/15/2023"))
print(change.mean)
amgendata[c(72, 561, 905, 994, 1091), ]
#detecting change in variance
change.var<- cpt.var(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.var, cpt.col="blue", ylab="Daily Closing Price of Amgen Stock", main="Change Point Detection for Change in Variance", xlab="Time", xaxt = "n")
axis(1, at = c(100,400,700,1000), labels=c("1/1/2020","1/1/2021","1/1/2023", "1/5/2024"))
print(change.var)
library(changepoint)
change.mean<- cpt.mean(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.mean, cpt.col="red", ylab="Daily Closing Price of amgen Stock", main="Change Point Detection for Change in Mean", xlab="Time", xaxt = "n")
axis(1, at = c(9,262,513,752), labels=c("1/4/2021","1/4/2022","1/4/2023", "12/15/2023"))
print(change.mean)
amgendata[c(72, 561, 905, 994, 1091), ]
#detecting change in variance
change.var<- cpt.var(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.var, cpt.col="blue", ylab="Daily Closing Price of Amgen Stock", main="Change Point Detection for Change in Variance", xlab="Time", xaxt = "n")
axis(1, at = c(100,400,700,1000), labels=c("1/1/2020","1/1/2021","1/1/2023", "1/5/2024"))
print(change.var)
change.meanvar<- cpt.meanvar(financial.data$TeslaPrice, penalty="AIC", method="BinSeg", Q=5)
library(changepoint)
change.mean<- cpt.mean(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.mean, cpt.col="red", ylab="Daily Closing Price of amgen Stock", main="Change Point Detection for Change in Mean", xlab="Time", xaxt = "n")
axis(1, at = c(9,262,513,752), labels=c("1/4/2021","1/4/2022","1/4/2023", "12/15/2023"))
print(change.mean)
amgendata[c(72, 561, 905, 994, 1091), ]
#detecting change in variance
change.var<- cpt.var(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.var, cpt.col="blue", ylab="Daily Closing Price of Amgen Stock", main="Change Point Detection for Change in Variance", xlab="Time", xaxt = "n")
axis(1, at = c(100,400,700,1000), labels=c("1/1/2020","1/1/2021","1/1/2023", "1/5/2024"))
print(change.var)
change.meanvar<- cpt.meanvar(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.meanvar,cpt.col="green",ylab="Daily Closing Price of Tesla Stock", main="Change Point Detection for Change in Mean and Variance", xlab="Time", xaxt = "n")
library(changepoint)
change.mean<- cpt.mean(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.mean, cpt.col="red", ylab="Daily Closing Price of amgen Stock", main="Change Point Detection for Change in Mean", xlab="Time", xaxt = "n")
axis(1, at = c(9,262,513,752), labels=c("1/4/2021","1/4/2022","1/4/2023", "12/15/2023"))
print(change.mean)
amgendata[c(72, 561, 905, 994, 1091), ]
#detecting change in variance
change.var<- cpt.var(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.var, cpt.col="blue", ylab="Daily Closing Price of Amgen Stock", main="Change Point Detection for Change in Variance", xlab="Time", xaxt = "n")
axis(1, at = c(1,254,757,1007), labels=c("1/1/2020","1/1/2021", " 1/1/2022", "1/1/2023", "1/5/2024"))
library(changepoint)
change.mean<- cpt.mean(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.mean, cpt.col="red", ylab="Daily Closing Price of amgen Stock", main="Change Point Detection for Change in Mean", xlab="Time", xaxt = "n")
axis(1, at = c(9,262,513,752), labels=c("1/4/2021","1/4/2022","1/4/2023", "12/15/2023"))
print(change.mean)
amgendata[c(72, 561, 905, 994, 1091), ]
#detecting change in variance
change.var<- cpt.var(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.var, cpt.col="blue", ylab="Daily Closing Price of Amgen Stock", main="Change Point Detection for Change in Variance", xlab="Time", xaxt = "n")
axis(1, at = c(1,254,506,757,1007), labels=c("1/1/2020","1/1/2021", " 1/1/2022", "1/1/2023", "1/5/2024"))
print(change.var)
change.meanvar<- cpt.meanvar(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.meanvar,cpt.col="green",ylab="Daily Closing Price of Amgen Stock", main="Change Point Detection for Change in Mean and Variance", xlab="Time", xaxt = "n")
library(changepoint)
change.mean<- cpt.mean(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.mean, cpt.col="red", ylab="Daily Closing Price of amgen Stock", main="Change Point Detection for Change in Mean", xlab="Time", xaxt = "n")
axis(1, at = c(9,262,513,752), labels=c("1/4/2021","1/4/2022","1/4/2023", "12/15/2023"))
print(change.mean)
amgendata[c(72, 561, 905, 994, 1091), ]
#detecting change in variance
change.var<- cpt.var(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.var, cpt.col="blue", ylab="Daily Closing Price of Amgen Stock", main="Change Point Detection for Change in Variance", xlab="Time", xaxt = "n")
axis(1, at = c(1,254,506,757,1007), labels=c("1/1/2020","1/1/2021", " 1/1/2022", "1/1/2023", "1/1/2024"))
print(change.var)
change.meanvar<- cpt.meanvar(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.meanvar,cpt.col="green",ylab="Daily Closing Price of Amgen Stock", main="Change Point Detection for Change in Mean and Variance", xlab="Time", xaxt = "n")
library(changepoint)
change.mean<- cpt.mean(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.mean, cpt.col="red", ylab="Daily Closing Price of amgen Stock", main="Change Point Detection for Change in Mean", xlab="Time", xaxt = "n")
axis(1, at = c(9,262,513,752), labels=c("1/4/2021","1/4/2022","1/4/2023", "12/15/2023"))
print(change.mean)
amgendata[c(72, 561, 905, 994, 1091), ]
#detecting change in variance
change.var<- cpt.var(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.var, cpt.col="blue", ylab="Daily Closing Price of Amgen Stock", main="Change Point Detection for Change in Variance", xlab="Time", xaxt = "n")
axis(1, at = c(72,254,506,757,1007), labels=c("1/1/2020","1/1/2021", " 1/1/2022", "1/1/2023", "1/1/2024"))
print(change.var)
change.meanvar<- cpt.meanvar(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.meanvar,cpt.col="green",ylab="Daily Closing Price of Amgen Stock", main="Change Point Detection for Change in Mean and Variance", xlab="Time", xaxt = "n")
library(changepoint)
change.mean<- cpt.mean(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.mean, cpt.col="red", ylab="Daily Closing Price of amgen Stock", main="Change Point Detection for Change in Mean", xlab="Time", xaxt = "n")
axis(1, at = c(9,262,513,752), labels=c("1/4/2021","1/4/2022","1/4/2023", "12/15/2023"))
print(change.mean)
amgendata[c(72, 561, 905, 994, 1091), ]
#detecting change in variance
change.var<- cpt.var(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.var, cpt.col="blue", ylab="Daily Closing Price of Amgen Stock", main="Change Point Detection for Change in Variance", xlab="Time", xaxt = "n")
axis(1, at = c(1,254,506,757,1007), labels=c("1/1/2020","1/1/2021", " 1/1/2022", "1/1/2023", "1/1/2024"))
print(change.var)
change.meanvar<- cpt.meanvar(amgendata$amgen_Close, penalty="AIC", method="BinSeg", Q=5)
plot(change.meanvar,cpt.col="green",ylab="Daily Closing Price of Amgen Stock", main="Change Point Detection for Change in Mean and Variance", xlab="Time", xaxt = "n")
#plotting partial autocorrelation function for MA model
pacfma<- ARMAacf(amgendata$amgen_Close, lag.max=9)
plot(1:10,pacfma, type="h", main="Partial Autocorrelation Function for MA Model", xlab="Lag", ylab="PACF")
abline(h=0)
#plotting actual and fitted MA(7) model values
MA7.model<- arima(amgendata$amgen_Close, order = c(0, 0, 7))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(7) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA7.model), lwd=1, col="navy")
legend("topright", c("actual","MA(7) fitted"), lty=1, lwd=2, col=c("green","navy"))\
#plotting partial autocorrelation function for MA model
pacfma<- ARMAacf(amgendata$amgen_Close, lag.max=9)
plot(1:10,pacfma, type="h", main="Partial Autocorrelation Function for MA Model", xlab="Lag", ylab="PACF")
abline(h=0)
#plotting actual and fitted MA(7) model values
MA7.model<- arima(amgendata$amgen_Close, order = c(0, 0, 7))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(7) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA7.model), lwd=1, col="navy")
legend("topright", c("actual","MA(7) fitted"), lty=1, lwd=2, col=c("green","navy"))
equation <- paste("MA(7): Y_t = ",
round(ma_coeff[1], 4), " * e_(t-1)",
ifelse(ma_coeff[2] >= 0, " + ", " - "), abs(round(ma_coeff[2], 4)), " * e_(t-2)",
ifelse(ma_coeff[3] >= 0, " + ", " - "), abs(round(ma_coeff[3], 4)), " * e_(t-3)",
ifelse(ma_coeff[4] >= 0, " + ", " - "), abs(round(ma_coeff[4], 4)), " * e_(t-4)",
ifelse(ma_coeff[5] >= 0, " + ", " - "), abs(round(ma_coeff[5], 4)), " * e_(t-5)",
ifelse(ma_coeff[6] >= 0, " + ", " - "), abs(round(ma_coeff[6], 4)), " * e_(t-6)",
ifelse(ma_coeff[7] >= 0, " + ", " - "), abs(round(ma_coeff[7], 4)), " * e_(t-7)",
sep="")
#plotting partial autocorrelation function for MA model
pacfma<- ARMAacf(amgendata$amgen_Close, lag.max=9)
plot(1:10,pacfma, type="h", main="Partial Autocorrelation Function for MA Model", xlab="Lag", ylab="PACF")
abline(h=0)
#plotting actual and fitted MA(7) model values
MA7.model<- arima(amgendata$amgen_Close, order = c(0, 0, 7))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(7) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA7.model), lwd=1, col="navy")
legend("topright", c("actual","MA(7) fitted"), lty=1, lwd=2, col=c("green","navy"))
ma_coeff <- coef(MA7.model)["ma"]
equation <- paste("MA(7): Y_t = ",
round(ma_coeff[1], 4), " * e_(t-1)",
ifelse(ma_coeff[2] >= 0, " + ", " - "), abs(round(ma_coeff[2], 4)), " * e_(t-2)",
ifelse(ma_coeff[3] >= 0, " + ", " - "), abs(round(ma_coeff[3], 4)), " * e_(t-3)",
ifelse(ma_coeff[4] >= 0, " + ", " - "), abs(round(ma_coeff[4], 4)), " * e_(t-4)",
ifelse(ma_coeff[5] >= 0, " + ", " - "), abs(round(ma_coeff[5], 4)), " * e_(t-5)",
ifelse(ma_coeff[6] >= 0, " + ", " - "), abs(round(ma_coeff[6], 4)), " * e_(t-6)",
ifelse(ma_coeff[7] >= 0, " + ", " - "), abs(round(ma_coeff[7], 4)), " * e_(t-7)",
sep="")
#plotting actual and fitted MA(9) model values
MA9.model<- arima(amgendata$amgen_Close, order = c(0, 0, 9))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(9) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA9.model), lwd=1, col="navy")
legend("topright", c("actual","MA(9) fitted"), lty=1, lwd=2, col=c("green","navy"))
#plotting actual and fitted MA(10) model values
MA10.model<- arima(amgendata$amgen_Close, order = c(0, 0, 10))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(10) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA10.model), lwd=1, col="navy")
legend("topright", c("actual","MA(10) fitted"), lty=1, lwd=2, col=c("green","navy"))
#plotting partial autocorrelation function for MA model
pacfma<- ARMAacf(amgendata$amgen_Close, lag.max=9)
plot(1:10,pacfma, type="h", main="Partial Autocorrelation Function for MA Model", xlab="Lag", ylab="PACF")
abline(h=0)
#plotting actual and fitted MA(7) model values
MA7.model<- arima(amgendata$amgen_Close, order = c(0, 0, 7))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(7) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA7.model), lwd=1, col="navy")
legend("topright", c("actual","MA(7) fitted"), lty=1, lwd=2, col=c("green","navy"))
ma_coeff <- coef(MA7.model)["ma"]
equation <- paste("MA(7): Y_t = ",
round(ma_coeff[1], 4), " * e_(t-1)",
ifelse(ma_coeff[2] >= 0, " + ", " - "), abs(round(ma_coeff[2], 4)), " * e_(t-2)",
ifelse(ma_coeff[3] >= 0, " + ", " - "), abs(round(ma_coeff[3], 4)), " * e_(t-3)",
ifelse(ma_coeff[4] >= 0, " + ", " - "), abs(round(ma_coeff[4], 4)), " * e_(t-4)",
ifelse(ma_coeff[5] >= 0, " + ", " - "), abs(round(ma_coeff[5], 4)), " * e_(t-5)",
ifelse(ma_coeff[6] >= 0, " + ", " - "), abs(round(ma_coeff[6], 4)), " * e_(t-6)",
ifelse(ma_coeff[7] >= 0, " + ", " - "), abs(round(ma_coeff[7], 4)), " * e_(t-7)",
sep="")
mtext(equation, side=3, line=0.5, cex=0.7)
#plotting actual and fitted MA(9) model values
MA9.model<- arima(amgendata$amgen_Close, order = c(0, 0, 9))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(9) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA9.model), lwd=1, col="navy")
legend("topright", c("actual","MA(9) fitted"), lty=1, lwd=2, col=c("green","navy"))
#plotting actual and fitted MA(10) model values
MA10.model<- arima(amgendata$amgen_Close, order = c(0, 0, 10))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(10) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA10.model), lwd=1, col="navy")
legend("topright", c("actual","MA(10) fitted"), lty=1, lwd=2, col=c("green","navy"))
#plotting partial autocorrelation function for MA model
pacfma<- ARMAacf(amgendata$amgen_Close, lag.max=9)
plot(1:10,pacfma, type="h", main="Partial Autocorrelation Function for MA Model", xlab="Lag", ylab="PACF")
abline(h=0)
#plotting actual and fitted MA(7) model values
MA7.model<- arima(amgendata$amgen_Close, order = c(0, 0, 7))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(7) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA7.model), lwd=1, col="navy")
legend("topright", c("actual","MA(7) fitted"), lty=1, lwd=2, col=c("green","navy"))
ma_coeff <- coef(MA7.model)["ma"]
equation <- paste("MA(7): Y_t = ",
round(ma_coeff[1], 4), " * e_(t-1)",
ifelse(ma_coeff[2] >= 0, " + ", " - "), abs(round(ma_coeff[2], 4)), " * e_(t-2)",
ifelse(ma_coeff[3] >= 0, " + ", " - "), abs(round(ma_coeff[3], 4)), " * e_(t-3)",
ifelse(ma_coeff[4] >= 0, " + ", " - "), abs(round(ma_coeff[4], 4)), " * e_(t-4)",
ifelse(ma_coeff[5] >= 0, " + ", " - "), abs(round(ma_coeff[5], 4)), " * e_(t-5)",
ifelse(ma_coeff[6] >= 0, " + ", " - "), abs(round(ma_coeff[6], 4)), " * e_(t-6)",
ifelse(ma_coeff[7] >= 0, " + ", " - "), abs(round(ma_coeff[7], 4)), " * e_(t-7)",
sep="")
equation
#plotting actual and fitted MA(9) model values
MA9.model<- arima(amgendata$amgen_Close, order = c(0, 0, 9))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(9) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA9.model), lwd=1, col="navy")
legend("topright", c("actual","MA(9) fitted"), lty=1, lwd=2, col=c("green","navy"))
#plotting actual and fitted MA(10) model values
MA10.model<- arima(amgendata$amgen_Close, order = c(0, 0, 10))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(10) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA10.model), lwd=1, col="navy")
legend("topright", c("actual","MA(10) fitted"), lty=1, lwd=2, col=c("green","navy"))
#plotting partial autocorrelation function for MA model
pacfma<- ARMAacf(amgendata$amgen_Close, lag.max=9)
plot(1:10,pacfma, type="h", main="Partial Autocorrelation Function for MA Model", xlab="Lag", ylab="PACF")
abline(h=0)
#plotting actual and fitted MA(7) model values
MA7.model<- arima(amgendata$amgen_Close, order = c(0, 0, 7))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(7) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA7.model), lwd=1, col="navy")
legend("topright", c("actual","MA(7) fitted"), lty=1, lwd=2, col=c("green","navy"))
ma_coeff <- coef(MA7.model)["ma"]
#plotting actual and fitted MA(9) model values
MA9.model<- arima(amgendata$amgen_Close, order = c(0, 0, 9))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(9) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA9.model), lwd=1, col="navy")
legend("topright", c("actual","MA(9) fitted"), lty=1, lwd=2, col=c("green","navy"))
#plotting actual and fitted MA(10) model values
MA10.model<- arima(amgendata$amgen_Close, order = c(0, 0, 10))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(10) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA10.model), lwd=1, col="navy")
legend("topright", c("actual","MA(10) fitted"), lty=1, lwd=2, col=c("green","navy"))
#plotting partial autocorrelation function for MA model
pacfma<- ARMAacf(amgendata$amgen_Close, lag.max=9)
plot(1:10,pacfma, type="h", main="Partial Autocorrelation Function for MA Model", xlab="Lag", ylab="PACF")
abline(h=0)
#plotting actual and fitted MA(7) model values
MA7.model<- arima(amgendata$amgen_Close, order = c(0, 0, 7))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(7) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA7.model), lwd=1, col="navy")
legend("topright", c("actual","MA(7) fitted"), lty=1, lwd=2, col=c("green","navy"))
coef(MA7.model)["ma"]
#plotting actual and fitted MA(9) model values
MA9.model<- arima(amgendata$amgen_Close, order = c(0, 0, 9))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(9) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA9.model), lwd=1, col="navy")
legend("topright", c("actual","MA(9) fitted"), lty=1, lwd=2, col=c("green","navy"))
#plotting actual and fitted MA(10) model values
MA10.model<- arima(amgendata$amgen_Close, order = c(0, 0, 10))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(10) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA10.model), lwd=1, col="navy")
legend("topright", c("actual","MA(10) fitted"), lty=1, lwd=2, col=c("green","navy"))
#plotting partial autocorrelation function for MA model
pacfma<- ARMAacf(amgendata$amgen_Close, lag.max=9)
plot(1:10,pacfma, type="h", main="Partial Autocorrelation Function for MA Model", xlab="Lag", ylab="PACF")
abline(h=0)
#plotting actual and fitted MA(7) model values
MA7.model<- arima(amgendata$amgen_Close, order = c(0, 0, 7))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(7) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA7.model), lwd=1, col="navy")
legend("topright", c("actual","MA(7) fitted"), lty=1, lwd=2, col=c("green","navy"))
coef(MA7.model)
#plotting actual and fitted MA(9) model values
MA9.model<- arima(amgendata$amgen_Close, order = c(0, 0, 9))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(9) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA9.model), lwd=1, col="navy")
legend("topright", c("actual","MA(9) fitted"), lty=1, lwd=2, col=c("green","navy"))
#plotting actual and fitted MA(10) model values
MA10.model<- arima(amgendata$amgen_Close, order = c(0, 0, 10))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(10) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA10.model), lwd=1, col="navy")
legend("topright", c("actual","MA(10) fitted"), lty=1, lwd=2, col=c("green","navy"))
#plotting partial autocorrelation function for MA model
pacfma<- ARMAacf(amgendata$amgen_Close, lag.max=9)
plot(1:10,pacfma, type="h", main="Partial Autocorrelation Function for MA Model", xlab="Lag", ylab="PACF")
abline(h=0)
#plotting actual and fitted MA(7) model values
MA7.model<- arima(amgendata$amgen_Close, order = c(0, 0, 7))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(7) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA7.model), lwd=1, col="navy")
legend("topright", c("actual","MA(7) fitted"), lty=1, lwd=2, col=c("green","navy"))
coef(MA7.model)
#plotting actual and fitted MA(9) model values
MA9.model<- arima(amgendata$amgen_Close, order = c(0, 0, 9))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(9) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA9.model), lwd=1, col="navy")
legend("topright", c("actual","MA(9) fitted"), lty=1, lwd=2, col=c("green","navy"))
coef(MA9.model)
#plotting actual and fitted MA(10) model values
MA10.model<- arima(amgendata$amgen_Close, order = c(0, 0, 10))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(10) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA10.model), lwd=1, col="navy")
legend("topright", c("actual","MA(10) fitted"), lty=1, lwd=2, col=c("green","navy"))
coef(MA10.model)
library(forecast)
#plotting partial autocorrelation function for AR model
pacf(amgendata$amgen_Close, 10, main="Partial Autocorrelation Function for AR Model", xlab="Lag", ylab="PACF")
AR1.model<- ar(amgendata$amgen_Close, order.max=1, method="ols")
AR1.model
#plotting actual and fitted AR(1) model values
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily Amgen Stock
Closing Prices with AR(1) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(AR1.model), lwd=1, col="black")
legend("topright", c("actual","AR(1) fitted"), lty=1, lwd=2, col=c("green","black"))
coef(AR1.model)
#plotting partial autocorrelation function for MA model
pacfma<- ARMAacf(amgendata$amgen_Close, lag.max=9)
plot(1:10,pacfma, type="h", main="Partial Autocorrelation Function for MA Model", xlab="Lag", ylab="PACF")
abline(h=0)
#plotting actual and fitted MA(7) model values
MA7.model<- arima(amgendata$amgen_Close, order = c(0, 0, 7))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(7) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA7.model), lwd=1, col="navy")
legend("topright", c("actual","MA(7) fitted"), lty=1, lwd=2, col=c("green","navy"))
coef(MA7.model)
#plotting actual and fitted MA(9) model values
MA9.model<- arima(amgendata$amgen_Close, order = c(0, 0, 9))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(9) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA9.model), lwd=1, col="navy")
legend("topright", c("actual","MA(9) fitted"), lty=1, lwd=2, col=c("green","navy"))
coef(MA9.model)
#plotting actual and fitted MA(10) model values
MA10.model<- arima(amgendata$amgen_Close, order = c(0, 0, 10))
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily amgen Stock
Closing Prices with MA(10) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(MA10.model), lwd=1, col="navy")
legend("topright", c("actual","MA(10) fitted"), lty=1, lwd=2, col=c("green","navy"))
coef(MA10.model)
#fitting ARMA(1,1) model
ARMA.model<- arima(amgendata$amgen_Close, order = c(1,0,1))
#plotting actual and fitted ARMA(1,1) model values
plot(as.POSIXct(amgendata$Date), amgendata$amgen_Close, main="Daily Tesla Stock
Closing Prices with ARMA(1,1) Model", lty=1, pch="", xlab="Time",ylab="Stock Price", panel.first=grid())
lines(as.POSIXct(amgendata$Date), amgendata$amgen_Close, lwd=2, col="green")
lines(as.POSIXct(amgendata$Date), fitted(ARMA.model), lwd=1, col="navy")
legend("topright", c("actual","ARMA(1,1) fitted"), lty=1, lwd=2, col=c("green","navy"))
coef(ARMA.model)
date<- as.POSIXct(amgendata$Date)
price<- amgendata$amgen_Close
##############################################
#  fitting geometric Brownian motion
##############################################
# calculating increments of log-price
log.inc<- c()
price1<- price[-1]
price1.lag<- head(price, -1)
log.ratio<- log(price1/price1.lag)
# plotting histogram of log-price increments
install.packages("rcompanion")
library(rcompanion)
plotNormalHistogram(log.ratio, main="Histogram for Log-price Increments",
xlab="Log-price increments", col="sky blue")
shapiro.test(log.ratio)
#W = 0.90681, p-value < 2.2e-16, not normally distributed
#estimating parameters
mu.hat <- mean(log.ratio)
sigma.hat <- sd(log.ratio)
BM <- c()
BM[1] <- 0
plot(date, price, type = "l", lty = 1, lwd = 2, col = "blue", xlab = "Time", main = "Actual and Simulated Amgen Stock Prices", ylim = c(0, 500), ylab = "Amgen Stock Price", first.panel = grid())
legend("topleft", c("Actual price", "Simulated price"), lty = 1, col = c("blue", "gray"))
set.seed(1234123)
for (j in 1:10) {
BM <- c()
BM[1] <- 0
nrows <- length(price)
for (i in 2:nrows)
BM[i] <- mu.hat + BM[i - 1] + sigma.hat * rnorm(1)
GBM <- price[1] * exp(BM)
lines(date, GBM, lwd = 2, col = "light gray")
}
install.packages("rcompanion")
date<- as.POSIXct(amgendata$Date)
price<- amgendata$amgen_Close
##############################################
#  fitting geometric Brownian motion
##############################################
# calculating increments of log-price
log.inc<- c()
price1<- price[-1]
price1.lag<- head(price, -1)
log.ratio<- log(price1/price1.lag)
# plotting histogram of log-price increments
install.packages("rcompanion")
library(rcompanion)
plotNormalHistogram(log.ratio, main="Histogram for Log-price Increments",
xlab="Log-price increments", col="sky blue")
shapiro.test(log.ratio)
#W = 0.90681, p-value < 2.2e-16, not normally distributed
#estimating parameters
mu.hat <- mean(log.ratio)
sigma.hat <- sd(log.ratio)
BM <- c()
BM[1] <- 0
plot(date, price, type = "l", lty = 1, lwd = 2, col = "blue", xlab = "Time", main = "Actual and Simulated Amgen Stock Prices", ylim = c(0, 750), ylab = "Amgen Stock Price", first.panel = grid())
legend("topleft", c("Actual price", "Simulated price"), lty = 1, col = c("blue", "gray"))
set.seed(1234123)
for (j in 1:10) {
BM <- c()
BM[1] <- 0
nrows <- length(price)
for (i in 2:nrows)
BM[i] <- mu.hat + BM[i - 1] + sigma.hat * rnorm(1)
GBM <- price[1] * exp(BM)
lines(date, GBM, lwd = 2, col = "light gray")
}
date<- as.POSIXct(amgendata$Date)
price<- amgendata$amgen_Close
##############################################
#  fitting geometric Brownian motion
##############################################
# calculating increments of log-price
log.inc<- c()
price1<- price[-1]
price1.lag<- head(price, -1)
log.ratio<- log(price1/price1.lag)
# plotting histogram of log-price increments
install.packages("rcompanion")
library(rcompanion)
plotNormalHistogram(log.ratio, main="Histogram for Log-price Increments",
xlab="Log-price increments", col="sky blue")
shapiro.test(log.ratio)
#W = 0.90681, p-value < 2.2e-16, not normally distributed
#estimating parameters
mu.hat <- mean(log.ratio)
sigma.hat <- sd(log.ratio)
BM <- c()
BM[1] <- 0
plot(date, price, type = "l", lty = 1, lwd = 2, col = "blue", xlab = "Time", main = "Actual and Simulated Amgen Stock Prices", ylim = c(0, 1000), ylab = "Amgen Stock Price", first.panel = grid())
legend("topleft", c("Actual price", "Simulated price"), lty = 1, col = c("blue", "gray"))
set.seed(1234123)
for (j in 1:10) {
BM <- c()
BM[1] <- 0
nrows <- length(price)
for (i in 2:nrows)
BM[i] <- mu.hat + BM[i - 1] + sigma.hat * rnorm(1)
GBM <- price[1] * exp(BM)
lines(date, GBM, lwd = 2, col = "light gray")
}
